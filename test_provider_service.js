// Test simple du service ProviderProfilService
// Ce fichier peut √™tre ex√©cut√© dans la console du navigateur

console.log('üß™ Test du service ProviderProfilService...');

// Simuler des donn√©es de test
const testProfileData = {
  provider_type: 'INDIVIDUAL',
  specializations: 'D√©veloppement Web, Python, React',
  hourly_rate: '50.00',
  daily_rate: '400.00',
  availability: 'AVAILABLE',
  years_experience: '5',
  completed_projects: '25',
  country: { id: 1, name: 'B√©nin' },
  region: { id: 2, name: 'Littoral' },
  // Ces champs ne doivent PAS √™tre envoy√©s
  image: null,
  cv: null,
  portfolio: null,
  organization_logo: null
};

const testFiles = {};

console.log('üìä Donn√©es de test:', testProfileData);
console.log('üìÅ Fichiers de test:', testFiles);

// Test de validation
try {
  const validation = ProviderProfilService.validateProfileData(testProfileData);
  console.log('‚úÖ Validation:', validation);
  
  if (validation.isValid) {
    // Test de pr√©paration des donn√©es
    const formData = ProviderProfilService.prepareProfileData(testProfileData, testFiles);
    
    console.log('üì§ FormData pr√©par√©:');
    for (let [key, value] of formData.entries()) {
      console.log(`  ${key}: ${value} (type: ${typeof value})`);
    }
    
    // V√©rifier qu'aucun champ de fichier vide n'est pr√©sent
    const fileFields = ['image', 'cv', 'portfolio', 'organization_logo'];
    let hasEmptyFileFields = false;
    
    for (let [key, value] of formData.entries()) {
      if (fileFields.includes(key) && (value === '' || value === 'null' || value === null)) {
        hasEmptyFileFields = true;
        console.warn(`‚ö†Ô∏è  ATTENTION: Champ fichier vide d√©tect√©: ${key} = ${value}`);
      }
    }
    
    if (!hasEmptyFileFields) {
      console.log('‚úÖ Aucun champ de fichier vide d√©tect√© - Le service fonctionne correctement!');
    } else {
      console.error('‚ùå PROBL√àME: Des champs de fichiers vides sont pr√©sents!');
    }
  } else {
    console.error('‚ùå Validation √©chou√©e:', validation.errors);
  }
} catch (error) {
  console.error('üí• Erreur lors du test:', error);
}

console.log('ÔøΩÔøΩ Test termin√©.'); 